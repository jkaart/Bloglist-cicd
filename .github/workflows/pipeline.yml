name: Deployment pipeline
env:
  BACKEND_PORT: 5173 # Port number from playwright config
  SKIP_CONDITION: ${{ contains(join(github.event.commits.*.message, ''), '#skip') }}
on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  Backend_lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Write .env file
        uses: varunkumar/create-env-action@f3700ac2e8f204a34720c3f8229b29e456b6bcff

        with:
          path: ${{github.workspace}}
          env: |
            TEST_MONGODB_URI = ${{secrets.TEST_MONGODB_URI}}
            SECRET = ${{secrets.SECRET}}
            PORT = ${{env.BACKEND_PORT}}
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test

  Frontend_lint_and_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test

  E2E_tests:
    needs: [Backend_lint_and_test, Frontend_lint_and_test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: e2e
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: |
          npm install
          npx playwright install --with-deps

      - name: Write .env file
        uses: varunkumar/create-env-action@f3700ac2e8f204a34720c3f8229b29e456b6bcff
        with:
          path: ${{github.workspace}}
          env: |
            TEST_MONGODB_URI = ${{secrets.TEST_MONGODB_URI}}
            SECRET = ${{secrets.SECRET}}
            PORT = ${{env.BACKEND_PORT}}
      - name: Build frontend
        run: |
          cd $GITHUB_WORKSPACE
          ./build_frontend.sh
      - name: Start backend and E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          npm install
          npm run start:test &
          sleep 10 & cd e2e && npm run test -- --timeout=20000
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: e2e/playwright-report/**/*
          retention-days: 30
  Deploy:
    needs: [Backend_lint_and_test, Frontend_lint_and_test, E2E_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy
        if: ${{ github.event_name == 'push' && env.SKIP_CONDITION  == 'false'}}
        uses: sws2apps/render-deployment@main #consider using pin for dependabot auto update
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false #optional, default true
  Tag_release:
    needs: [Deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && env.SKIP_CONDITION  == 'false'}}
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
